import type { GetServerSidePropsContext } from 'next';
import { getServerSession } from 'next-auth';
import { useSession } from 'next-auth/react';
import { useTranslation } from 'next-i18next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import Head from 'next/head';

import nextI18nConfig from '@/../next-i18next.config.mjs';
import { MainLayout } from '@/components/common/layout';
import { LandingView, OrgsHomeView, PlayersHomeView } from '@/components/home';
import { authOptions } from '@/pages/api/auth/[...nextauth]';
import type { Role } from '@prisma/client';
import type { NextPageWithLayout } from './_app';

const HomePages: Record<Role, () => JSX.Element> = {
  ADMIN: () => <></>,
  PLAYER: PlayersHomeView,
  ORGANIZATION: OrgsHomeView,
};

const Home: NextPageWithLayout = () => {
  const { t } = useTranslation('common');
  const { data: session } = useSession();

  const HomeView = HomePages[session?.user?.role ?? 'ADMIN'];

  if (session) {
    return (
      <>
        <Head>
          <title>{t('titles.home')}</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <MainLayout>
          <HomeView />
        </MainLayout>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>{t('titles.landing')}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LandingView />
    </>
  );
};

export default Home;

export const getServerSideProps = async (context: GetServerSidePropsContext) => {
  return {
    props: {
      session: await getServerSession(context.req, context.res, authOptions),
      ...(await serverSideTranslations(
        context.locale ?? '',
        ['common', 'navigation', 'landing', 'home'],
        nextI18nConfig,
        ['en'],
      )),
    },
  };
};
